package modem

import chisel3._
import chiseltest._
import chiseltest.experimental.TestOptionBuilder._
import chiseltest.internal.{TreadleBackendAnnotation, VerilatorBackendAnnotation, WriteVcdAnnotation}
import org.scalatest.flatspec.AnyFlatSpec
import baseband.BLEBasebandModemParams
import verif._
import scala.collection.immutable.Seq

class CDRTest extends AnyFlatSpec with ChiselScalatestTester {
  it should "Generate Waveform" in {
    test(new CDRDecision(new BLEBasebandModemParams)).withAnnotations(Seq(TreadleBackendAnnotation, WriteVcdAnnotation)) { c =>
      val sample = Seq(31, 25, 10, -10, -25, -31, -25, -10, 10, 25, 31, 25, 10, -10, -25, -31, -25, -10, 9, 25, 31, 25, 10, -9, -24, -31, -27, -13, 5, 21, 30, 29, 19, 3, -14, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 25, 31, 22, 4, -16, -29, -30, -18, 0, 18, 29, 30, 20, 4, -13, -26, -31, -26, -13, 4, 19, 29, 30, 21, 5, -12, -26, -31, -24, -8, 12, 27, 31, 21, 2, -18, -30, -28, -13, 8, 26, 31, 21, 2, -19, -30, -27, -12, 10, 27, 31, 20, 0, -20, -31, -27, -10, 11, 27, 30, 19, -1, -20, -30, -27, -12, 7, 24, 31, 26, 12, -7, -22, -30, -29, -18, -2, 15, 27, 31, 25, 12, -5, -21, -30, -29, -18, 0, 18, 29, 29, 17, -3, -21, -31, -26, -10, 11, 27, 30, 19, -1, -20, -30, -27, -12, 7, 24, 31, 26, 12, -7, -22, -30, -29, -18, -2, 15, 27, 31, 25, 12, -5, -21, -30, -29, -18, 0, 18, 29, 29, 17, -3, -21, -31, -26, -10, 11, 27, 30, 19, -1, -20, -30, -27, -12, 7, 24, 31, 26, 12, -7, -22, -30, -29, -18, -2, 15, 27, 31, 25, 12, -5, -21, -30, -29, -18, 0, 18, 29, 29, 17, -3, -21, -31, -26, -10, 11, 27, 30, 19, -1, -21, -31, -26, -9, 13, 28, 30, 18, -3, -22, -31, -25, -7, 14, 29, 30, 16, -5, -23, -31, -24, -5, 16, 29, 29, 15, -6, -24, -31, -23, -4, 17, 30, 28, 14, -8, -25, -31, -22, -3, 17, 30, 29, 16, -4, -22, -31, -28, -15, 3, 19, 30, 30, 21, 6, -12, -25, -31, -28, -16, 0, 16, 28, 31, 25, 11, -6, -21, -30, -30, -21, -6, 11, 25, 31, 28, 17, 1, -16, -27, -31, -25, -12, 5, 20, 30, 30, 22, 7, -10, -24, -31, -28, -17, -1, 15, 27, 31, 25, 12, -5, -21, -30, -29, -18, 0, 18, 29, 29, 17, -3, -21, -31, -26, -10, 11, 27, 30, 19, -1, -21, -31, -26, -9, 13, 28, 30, 18, -3, -22, -31, -25, -7, 14, 29, 30, 17, -4, -23, -31, -25, -7, 13, 28, 30, 21, 3, -15, -28, -31, -23, -8, 10, 24, 31, 28, 17, 1, -16, -27, -31, -25, -12, 5, 20, 30, 30, 22, 7, -10, -24, -31, -28, -17, -1, 15, 27, 31, 25, 12, -5, -21, -30, -29, -18, 0, 18, 29, 29, 17, -3, -21, -31, -26, -10, 11, 27, 30, 19, -1, -21, -31, -26, -9, 13, 28, 30, 18, -3, -22, -31, -25, -7, 14, 29, 30, 17, -4, -23, -31, -25, -7, 13, 28, 30, 21, 3, -15, -28, -31, -23, -8, 10, 24, 31, 28, 17, 1, -16, -27, -31, -25, -12, 5, 20, 30, 30, 22, 7, -10, -24, -31, -28, -17, -1, 15, 27, 31, 25, 12, -5, -21, -30, -29, -18, 0, 18, 29, 29, 17, -3, -21, -31, -26, -10, 11, 27, 30, 19, -1, -21, -31, -26, -9, 13, 28, 30, 18, -3, -22, -31, -25, -7, 14, 29, 30, 17, -4, -23, -31, -25, -7, 13, 28, 30, 21, 3, -15, -28, -31, -23, -8, 10, 24, 31, 28, 17, 1)
      val inDriver = new DecoupledDriverMaster(c.clock, c.io.signal)
      val outDriver = new DecoupledDriverSlave(c.clock, c.io.out)
      val outMonitor = new DecoupledMonitor(c.clock, c.io.out)
      inDriver.push(sample.map(p => new DecoupledTX(SInt(6.W)).tx(p.S(6.W))))
      c.clock.step(10000)
      println(outMonitor.monitoredTransactions.map{_.data})
    }
  }
}
